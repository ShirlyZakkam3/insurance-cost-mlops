name: CI/CD - Build, Push, and Deploy

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: Build and Push to Docker Hub

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          pip install -r app/requirements.txt
          pip install pytest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: |
            docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/insurance-predictor:latest
            docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/insurance-predictor:${{ github.sha }}

      - name: Save Image Tag
        id: metadata
        run: echo "tag=${{ github.sha }}" >> "$GITHUB_OUTPUT"

  deploy-to-minikube:
    runs-on: ubuntu-latest
    name: Deploy to Minikube
    needs: build-and-push

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up and Start Minikube
        uses: medyagh/setup-minikube@latest
        with:
          driver: docker

      - name: Enable Ingress (optional)
        run: minikube addons enable ingress

      - name: Set kubectl context
        run: kubectl config use-context minikube

      - name: Substitute image in deployment.yaml
        run: |
          IMAGE="docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/insurance-predictor:${{ github.sha }}"
          sed -i "s|__IMAGE_NAME__|$IMAGE|g" app/k8s/deployment.yaml
          echo "Using image: $IMAGE"
          echo "----- deployment.yaml -----"
          cat app/k8s/deployment.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f app/k8s/deployment.yaml
          kubectl apply -f app/k8s/service.yaml

      - name: Wait for Rollout
        run: |
          kubectl rollout status deployment/mlops-app-deployment --timeout=180s
          kubectl get pods -o wide
          kubectl get svc -o wide

      - name: Debug on failure
        if: failure()
        run: |
          kubectl describe deployment mlops-app-deployment || true
          kubectl get pods -l app=mlops-app -o name | xargs -I{} kubectl describe {} || true
          POD=$(kubectl get pods -l app=mlops-app -o jsonpath="{.items[0].metadata.name}" || true)
          [ -n "$POD" ] && kubectl logs "$POD" || true

      - name: Get Minikube Service URL
        run: |
          minikube service mlops-app-service --url > service_url.txt
          cat service_url.txt

      - name: Upload Service URL
        uses: actions/upload-artifact@v4
        with:
          name: minikube-service-url
          path: service_url.txt
