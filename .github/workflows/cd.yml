name: CI/CD - Build, Push, and Deploy

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: Build and Push to Docker Hub

    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      - name: 2. Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: 3. Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: 4. Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 5. Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: 6. Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/insurance-predictor:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/insurance-predictor:${{ github.sha }}

      - name: 7. Save Image Tag
        id: metadata
        run: echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT

  deploy-to-minikube:
    runs-on: ubuntu-latest
    name: Deploy to Minikube
    needs: build-and-push

    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      - name: 2. Set Up and Start Minikube
        uses: medyagh/setup-minikube@latest
        with:
          driver: docker

      - name: 3. Enable Ingress (optional)
        run: |
          minikube addons enable ingress

      - name: 3.5 Set kubectl context to Minikube
        run: |
          kubectl config use-context minikube

      - name: 4. Update deployment.yaml with latest image tag
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/insurance-predictor:${{ github.sha }}
          echo "Using image: $IMAGE_NAME"
          sed -i "s|__IMAGE_NAME__|$IMAGE_NAME|g" app/k8s/deployment.yaml
          echo "Updated deployment.yaml:"
          cat app/k8s/deployment.yaml

      - name: 5. Deploy to Kubernetes
        run: |
          kubectl apply -f app/k8s/deployment.yaml
          kubectl apply -f app/k8s/service.yaml

      - name: 6. Wait for Rollout
        run: |
          kubectl rollout status deployment/mlops-app-deployment --timeout=120s
          kubectl get pods
          kubectl get svc

      - name: 7. Get Minikube Service URL
        run: |
          minikube service mlops-app-service --url > service_url.txt
          cat service_url.txt

      - name: 8. Upload Service URL as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: minikube-service-url
          path: service_url.txt
